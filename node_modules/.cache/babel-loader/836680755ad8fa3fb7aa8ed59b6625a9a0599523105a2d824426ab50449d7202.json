{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/todo/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport NewTaskForm from './NewTaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoData: [],\n      filterFlag: 'all',\n      inputValue: '',\n      editInputValue: ''\n    };\n    this.getTaskId = () => Math.floor(Math.random() * 1000);\n    this.makeCompleted = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const index = todoData.findIndex(el => el.id === id);\n        const elem = todoData.find(el => el.id === id);\n        const newElem = {\n          ...elem,\n          isCompleted: !elem.isCompleted\n        };\n        const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n    this.deleteTask = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const index = todoData.findIndex(elem => elem.id === id);\n        const newArray = [...todoData.slice(0, index), ...todoData.slice(index + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n    this.addInputValue = text => {\n      this.setState({\n        inputValue: text\n      });\n    };\n    this.addNewtask = () => {\n      const {\n        inputValue\n      } = this.state;\n      if (inputValue) {\n        const newTask = {\n          id: this.getTaskId(),\n          name: inputValue.trim(),\n          status: new Date(),\n          isEditing: false,\n          isCompleted: false\n        };\n        this.setState(({\n          todoData\n        }) => {\n          const newTodos = [...todoData, newTask];\n          return {\n            todoData: newTodos,\n            inputValue: ''\n          };\n        });\n      }\n    };\n    this.filterAll = () => {\n      this.setState({\n        filterFlag: 'all'\n      });\n    };\n    this.filterActive = () => {\n      this.setState({\n        filterFlag: 'active'\n      });\n    };\n    this.filterCompleted = () => {\n      this.setState({\n        filterFlag: 'completed'\n      });\n    };\n    this.deleteAllCompletedTasks = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const activeTasks = todoData.filter(todo => !todo.isCompleted);\n        return {\n          todoData: activeTasks\n        };\n      });\n    };\n    this.editTask = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const index = todoData.findIndex(el => el.id === id);\n        const elem = todoData.find(el => el.id === id);\n        const newElem = {\n          ...elem,\n          isEditing: !elem.isEditing\n        };\n        const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n        return {\n          todoData: newArray,\n          editInputValue: newElem.name\n        };\n      });\n    };\n    this.editInputValue = text => {\n      this.setState({\n        editInputValue: text\n      });\n    };\n    this.changeTask = id => {\n      const {\n        editInputValue\n      } = this.state;\n      if (editInputValue.trim()) {\n        this.setState(({\n          todoData\n        }) => {\n          const index = todoData.findIndex(el => el.id === id);\n          const elem = todoData.find(el => el.id === id);\n          const newElem = {\n            ...elem,\n            name: editInputValue.trim(),\n            isEditing: !elem.isEditing\n          };\n          const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n          return {\n            todoData: newArray,\n            editInputValue: ''\n          };\n        });\n      }\n    };\n  }\n  render() {\n    const {\n      todoData,\n      inputValue,\n      filterFlag,\n      editInputValue\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onChange: this.addInputValue,\n        onSubmit: this.addNewtask,\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: todoData,\n          filterFlag: filterFlag,\n          onActive: this.makeCompleted,\n          onDelete: this.deleteTask,\n          onEdit: this.editTask,\n          value: editInputValue,\n          onChange: this.editInputValue,\n          onSubmit: this.changeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todoData,\n          filterFlag: filterFlag,\n          onFilterAll: this.filterAll,\n          onFilterActive: this.filterActive,\n          onFilterCompleted: this.filterCompleted,\n          onDeletedAllCompleted: this.deleteAllCompletedTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Footer","NewTaskForm","TaskList","jsxDEV","_jsxDEV","App","constructor","args","state","todoData","filterFlag","inputValue","editInputValue","getTaskId","Math","floor","random","makeCompleted","id","setState","index","findIndex","el","elem","find","newElem","isCompleted","newArray","slice","deleteTask","addInputValue","text","addNewtask","newTask","name","trim","status","Date","isEditing","newTodos","filterAll","filterActive","filterCompleted","deleteAllCompletedTasks","activeTasks","filter","todo","editTask","changeTask","render","className","children","onChange","onSubmit","value","fileName","_jsxFileName","lineNumber","columnNumber","todos","onActive","onDelete","onEdit","onFilterAll","onFilterActive","onFilterCompleted","onDeletedAllCompleted"],"sources":["/Users/macbook/todo/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Footer from './Footer';\nimport NewTaskForm from './NewTaskForm';\nimport TaskList from './TaskList';\n\n\nexport default class App extends Component {\n  state = {\n    todoData: [],\n    filterFlag: 'all',\n    inputValue: '',\n    editInputValue: '',\n  };\n\n  getTaskId = () => Math.floor(Math.random() * 1000);\n\n  makeCompleted = (id) => {\n    this.setState(({ todoData }) => {\n      const index = todoData.findIndex((el) => el.id === id);\n      const elem = todoData.find((el) => el.id === id);\n      const newElem = {\n        ...elem,\n        isCompleted: !elem.isCompleted,\n      };\n\n      const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const index = todoData.findIndex((elem) => elem.id === id);\n      const newArray = [...todoData.slice(0, index), ...todoData.slice(index + 1)];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  addInputValue = (text) => {\n    this.setState({\n      inputValue: text,\n    });\n  };\n\n  addNewtask = () => {\n    const { inputValue } = this.state;\n\n    if (inputValue) {\n      const newTask = {\n        id: this.getTaskId(),\n        name: inputValue.trim(),\n        status: new Date(),\n        isEditing: false,\n        isCompleted: false,\n      };\n      this.setState(({ todoData }) => {\n        const newTodos = [...todoData, newTask];\n        return {\n          todoData: newTodos,\n          inputValue: '',\n        };\n      });\n    }\n  };\n\n  filterAll = () => {\n    this.setState({\n      filterFlag: 'all',\n    });\n  };\n\n  filterActive = () => {\n    this.setState({\n      filterFlag: 'active',\n    });\n  };\n\n  filterCompleted = () => {\n    this.setState({\n      filterFlag: 'completed',\n    });\n  };\n\n  deleteAllCompletedTasks = () => {\n    this.setState(({ todoData }) => {\n      const activeTasks = todoData.filter((todo) => !todo.isCompleted);\n      return {\n        todoData: activeTasks,\n      };\n    });\n  };\n\n  editTask = (id) => {\n    this.setState(({ todoData }) => {\n      const index = todoData.findIndex((el) => el.id === id);\n      const elem = todoData.find((el) => el.id === id);\n      const newElem = {\n        ...elem,\n        isEditing: !elem.isEditing,\n      };\n\n      const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n\n      return {\n        todoData: newArray,\n        editInputValue: newElem.name,\n      };\n    });\n  };\n\n  editInputValue = (text) => {\n    this.setState({\n      editInputValue: text,\n    });\n  };\n\n  changeTask = (id) => {\n    const { editInputValue } = this.state;\n\n    if (editInputValue.trim()) {\n      this.setState(({ todoData }) => {\n        const index = todoData.findIndex((el) => el.id === id);\n        const elem = todoData.find((el) => el.id === id);\n        const newElem = {\n          ...elem,\n          name: editInputValue.trim(),\n          isEditing: !elem.isEditing,\n        };\n        const newArray = [...todoData.slice(0, index), newElem, ...todoData.slice(index + 1)];\n        return {\n          todoData: newArray,\n          editInputValue: '',\n        };\n      });\n    }\n  };\n\n  render() {\n    const { todoData, inputValue, filterFlag, editInputValue } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm onChange={this.addInputValue} onSubmit={this.addNewtask} value={inputValue} />\n        <section className=\"main\">\n          <TaskList\n            todos={todoData}\n            filterFlag={filterFlag}\n            onActive={this.makeCompleted}\n            onDelete={this.deleteTask}\n            onEdit={this.editTask}\n            value={editInputValue}\n            onChange={this.editInputValue}\n            onSubmit={this.changeTask}\n          />\n          <Footer\n            todos={todoData}\n            filterFlag={filterFlag}\n            onFilterAll={this.filterAll}\n            onFilterActive={this.filterActive}\n            onFilterCompleted={this.filterCompleted}\n            onDeletedAllCompleted={this.deleteAllCompletedTasks}\n          />\n        </section>\n      </section>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}